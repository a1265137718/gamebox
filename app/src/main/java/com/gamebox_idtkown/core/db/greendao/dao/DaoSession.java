package com.gamebox_idtkown.core.db.greendao.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.gamebox_idtkown.core.db.greendao.GameInfo;
import com.gamebox_idtkown.core.db.greendao.GameType;
import com.gamebox_idtkown.core.db.greendao.ChosenInfo;
import com.gamebox_idtkown.core.db.greendao.GameImage;
import com.gamebox_idtkown.core.db.greendao.DownloadInfo;
import com.gamebox_idtkown.core.db.greendao.GameDetail;
import com.gamebox_idtkown.core.db.greendao.GiftIndex;
import com.gamebox_idtkown.core.db.greendao.GiftDetail;
import com.gamebox_idtkown.core.db.greendao.UserInfo;
import com.gamebox_idtkown.core.db.greendao.PayTypeInfo;
import com.gamebox_idtkown.core.db.greendao.EarnPointTaskInfo;
import com.gamebox_idtkown.core.db.greendao.GoodType;
import com.gamebox_idtkown.core.db.greendao.GoodList;
import com.gamebox_idtkown.core.db.greendao.GoodChange;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig gameInfoDaoConfig;
    private final DaoConfig gameTypeDaoConfig;
    private final DaoConfig chosenInfoDaoConfig;
    private final DaoConfig gameImageDaoConfig;
    private final DaoConfig downloadInfoDaoConfig;
    private final DaoConfig gameDetailDaoConfig;
    private final DaoConfig giftIndexDaoConfig;
    private final DaoConfig giftDetailDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig payTypeInfoDaoConfig;
    private final DaoConfig earnPointTaskInfoDaoConfig;
    private final DaoConfig goodTypeDaoConfig;
    private final DaoConfig goodListDaoConfig;
    private final DaoConfig goodChangeDaoConfig;

    private final GameInfoDao gameInfoDao;
    private final GameTypeDao gameTypeDao;
    private final ChosenInfoDao chosenInfoDao;
    private final GameImageDao gameImageDao;
    private final DownloadInfoDao downloadInfoDao;
    private final GameDetailDao gameDetailDao;
    private final GiftIndexDao giftIndexDao;
    private final GiftDetailDao giftDetailDao;
    private final UserInfoDao userInfoDao;
    private final PayTypeInfoDao payTypeInfoDao;
    private final EarnPointTaskInfoDao earnPointTaskInfoDao;
    private final GoodTypeDao goodTypeDao;
    private final GoodListDao goodListDao;
    private final GoodChangeDao goodChangeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        gameInfoDaoConfig = daoConfigMap.get(GameInfoDao.class).clone();
        gameInfoDaoConfig.initIdentityScope(type);

        gameTypeDaoConfig = daoConfigMap.get(GameTypeDao.class).clone();
        gameTypeDaoConfig.initIdentityScope(type);

        chosenInfoDaoConfig = daoConfigMap.get(ChosenInfoDao.class).clone();
        chosenInfoDaoConfig.initIdentityScope(type);

        gameImageDaoConfig = daoConfigMap.get(GameImageDao.class).clone();
        gameImageDaoConfig.initIdentityScope(type);

        downloadInfoDaoConfig = daoConfigMap.get(DownloadInfoDao.class).clone();
        downloadInfoDaoConfig.initIdentityScope(type);

        gameDetailDaoConfig = daoConfigMap.get(GameDetailDao.class).clone();
        gameDetailDaoConfig.initIdentityScope(type);

        giftIndexDaoConfig = daoConfigMap.get(GiftIndexDao.class).clone();
        giftIndexDaoConfig.initIdentityScope(type);

        giftDetailDaoConfig = daoConfigMap.get(GiftDetailDao.class).clone();
        giftDetailDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        payTypeInfoDaoConfig = daoConfigMap.get(PayTypeInfoDao.class).clone();
        payTypeInfoDaoConfig.initIdentityScope(type);

        earnPointTaskInfoDaoConfig = daoConfigMap.get(EarnPointTaskInfoDao.class).clone();
        earnPointTaskInfoDaoConfig.initIdentityScope(type);

        goodTypeDaoConfig = daoConfigMap.get(GoodTypeDao.class).clone();
        goodTypeDaoConfig.initIdentityScope(type);

        goodListDaoConfig = daoConfigMap.get(GoodListDao.class).clone();
        goodListDaoConfig.initIdentityScope(type);

        goodChangeDaoConfig = daoConfigMap.get(GoodChangeDao.class).clone();
        goodChangeDaoConfig.initIdentityScope(type);

        gameInfoDao = new GameInfoDao(gameInfoDaoConfig, this);
        gameTypeDao = new GameTypeDao(gameTypeDaoConfig, this);
        chosenInfoDao = new ChosenInfoDao(chosenInfoDaoConfig, this);
        gameImageDao = new GameImageDao(gameImageDaoConfig, this);
        downloadInfoDao = new DownloadInfoDao(downloadInfoDaoConfig, this);
        gameDetailDao = new GameDetailDao(gameDetailDaoConfig, this);
        giftIndexDao = new GiftIndexDao(giftIndexDaoConfig, this);
        giftDetailDao = new GiftDetailDao(giftDetailDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        payTypeInfoDao = new PayTypeInfoDao(payTypeInfoDaoConfig, this);
        earnPointTaskInfoDao = new EarnPointTaskInfoDao(earnPointTaskInfoDaoConfig, this);
        goodTypeDao = new GoodTypeDao(goodTypeDaoConfig, this);
        goodListDao = new GoodListDao(goodListDaoConfig, this);
        goodChangeDao = new GoodChangeDao(goodChangeDaoConfig, this);

        registerDao(GameInfo.class, gameInfoDao);
        registerDao(GameType.class, gameTypeDao);
        registerDao(ChosenInfo.class, chosenInfoDao);
        registerDao(GameImage.class, gameImageDao);
        registerDao(DownloadInfo.class, downloadInfoDao);
        registerDao(GameDetail.class, gameDetailDao);
        registerDao(GiftIndex.class, giftIndexDao);
        registerDao(GiftDetail.class, giftDetailDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(PayTypeInfo.class, payTypeInfoDao);
        registerDao(EarnPointTaskInfo.class, earnPointTaskInfoDao);
        registerDao(GoodType.class, goodTypeDao);
        registerDao(GoodList.class, goodListDao);
        registerDao(GoodChange.class, goodChangeDao);
    }
    
    public void clear() {
        gameInfoDaoConfig.clearIdentityScope();
        gameTypeDaoConfig.clearIdentityScope();
        chosenInfoDaoConfig.clearIdentityScope();
        gameImageDaoConfig.clearIdentityScope();
        downloadInfoDaoConfig.clearIdentityScope();
        gameDetailDaoConfig.clearIdentityScope();
        giftIndexDaoConfig.clearIdentityScope();
        giftDetailDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        payTypeInfoDaoConfig.clearIdentityScope();
        earnPointTaskInfoDaoConfig.clearIdentityScope();
        goodTypeDaoConfig.clearIdentityScope();
        goodListDaoConfig.clearIdentityScope();
        goodChangeDaoConfig.clearIdentityScope();
    }

    public GameInfoDao getGameInfoDao() {
        return gameInfoDao;
    }

    public GameTypeDao getGameTypeDao() {
        return gameTypeDao;
    }

    public ChosenInfoDao getChosenInfoDao() {
        return chosenInfoDao;
    }

    public GameImageDao getGameImageDao() {
        return gameImageDao;
    }

    public DownloadInfoDao getDownloadInfoDao() {
        return downloadInfoDao;
    }

    public GameDetailDao getGameDetailDao() {
        return gameDetailDao;
    }

    public GiftIndexDao getGiftIndexDao() {
        return giftIndexDao;
    }

    public GiftDetailDao getGiftDetailDao() {
        return giftDetailDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public PayTypeInfoDao getPayTypeInfoDao() {
        return payTypeInfoDao;
    }

    public EarnPointTaskInfoDao getEarnPointTaskInfoDao() {
        return earnPointTaskInfoDao;
    }

    public GoodTypeDao getGoodTypeDao() {
        return goodTypeDao;
    }

    public GoodListDao getGoodListDao() {
        return goodListDao;
    }

    public GoodChangeDao getGoodChangeDao() {
        return goodChangeDao;
    }

}
